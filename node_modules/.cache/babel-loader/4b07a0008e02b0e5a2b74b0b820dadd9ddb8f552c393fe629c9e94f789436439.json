{"ast":null,"code":"var _jsxFileName = \"/Users/mmaksim/test-ex/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport TaskTable from '../components/TaskTable';\nimport TaskModal from '../components/TaskModal';\nimport CreateTaskModal from '../components/CreateTaskModal';\nimport '../TaskTable.css';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'https://fasteasy-jvqis72guq-lm.a.run.app';\nconst testTasks = [{\n  task_name: 'Test Task 1',\n  dimension: '1x1',\n  template_id: 'template_01',\n  genPerRef: 5,\n  gen_type: 'type_1',\n  image_layers: ['image_1', 'image_2'],\n  text_layers: ['text_1', 'text_2']\n}, {\n  task_name: 'Test Task 2',\n  dimension: '16x9',\n  template_id: 'template_02',\n  genPerRef: 3,\n  gen_type: 'type_2',\n  image_layers: ['image_3', 'image_4'],\n  text_layers: ['text_3', 'text_4']\n}];\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState(testTasks);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const handleGenerate = async task => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/tz-front/generate_formats`, {\n        task_name: task.task_name,\n        dimension: task.dimension,\n        template_id: task.template_id,\n        amount: task.genPerRef,\n        gen_type: task.gen_type,\n        image_layers: task.image_layers,\n        text_layers: task.text_layers\n      }, {\n        auth: {\n          username: 'renesandro',\n          password: 'qwerty1234'\n        }\n      });\n      console.log('Generated task:', response.data);\n    } catch (error) {\n      console.error('Error generating task:', error);\n    }\n  };\n  const handleRowClick = task => {\n    setSelectedTask(task);\n  };\n  const handleUpdateTask = updatedTask => {\n    setTasks(prevTasks => prevTasks.map(task => task.task_name === updatedTask.task_name ? updatedTask : task));\n  };\n  const closeModal = () => {\n    setSelectedTask(null);\n  };\n  const addNewTask = newTask => {\n    setTasks(prevTasks => [...prevTasks, newTask]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskTable, {\n      tasks: tasks,\n      handleGenerate: handleGenerate,\n      handleRowClick: handleRowClick,\n      handleUpdateTask: handleUpdateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: selectedTask,\n      closeModal: closeModal,\n      updateTask: handleUpdateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), isCreateModalOpen && /*#__PURE__*/_jsxDEV(CreateTaskModal, {\n      closeModal: () => setIsCreateModalOpen(false),\n      addNewTask: addNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-task-button\",\n      onClick: () => setIsCreateModalOpen(true),\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"9AhZgX7JCAjnhPFrY+McV2t0FhA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","axios","TaskTable","TaskModal","CreateTaskModal","jsxDEV","_jsxDEV","API_BASE_URL","testTasks","task_name","dimension","template_id","genPerRef","gen_type","image_layers","text_layers","Dashboard","_s","tasks","setTasks","selectedTask","setSelectedTask","isCreateModalOpen","setIsCreateModalOpen","handleGenerate","task","response","post","amount","auth","username","password","console","log","data","error","handleRowClick","handleUpdateTask","updatedTask","prevTasks","map","closeModal","addNewTask","newTask","children","fileName","_jsxFileName","lineNumber","columnNumber","updateTask","className","onClick","_c","$RefreshReg$"],"sources":["/Users/mmaksim/test-ex/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport TaskTable from '../components/TaskTable';\nimport TaskModal from '../components/TaskModal';\nimport CreateTaskModal from '../components/CreateTaskModal'; \n\nimport '../TaskTable.css';\nimport '../index.css';\n\nconst API_BASE_URL = 'https://fasteasy-jvqis72guq-lm.a.run.app';\n\nconst testTasks = [\n  {\n    task_name: 'Test Task 1',\n    dimension: '1x1',\n    template_id: 'template_01',\n    genPerRef: 5,\n    gen_type: 'type_1',\n    image_layers: ['image_1', 'image_2'],\n    text_layers: ['text_1', 'text_2'],\n  },\n  {\n    task_name: 'Test Task 2',\n    dimension: '16x9',\n    template_id: 'template_02',\n    genPerRef: 3,\n    gen_type: 'type_2',\n    image_layers: ['image_3', 'image_4'],\n    text_layers: ['text_3', 'text_4'],\n  },\n];\n\nconst Dashboard = () => {\n  const [tasks, setTasks] = useState(testTasks);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n\n  const handleGenerate = async (task) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/tz-front/generate_formats`, {\n        task_name: task.task_name,\n        dimension: task.dimension,\n        template_id: task.template_id,\n        amount: task.genPerRef,\n        gen_type: task.gen_type,\n        image_layers: task.image_layers,\n        text_layers: task.text_layers,\n      }, {\n        auth: {\n          username: 'renesandro',\n          password: 'qwerty1234',\n        },\n      });\n      console.log('Generated task:', response.data);\n    } catch (error) {\n      console.error('Error generating task:', error);\n    }\n  };\n\n  const handleRowClick = (task) => {\n    setSelectedTask(task);\n  };\n\n  const handleUpdateTask = (updatedTask) => {\n    setTasks((prevTasks) => prevTasks.map((task) =>\n      task.task_name === updatedTask.task_name ? updatedTask : task\n    ));\n  };\n\n  const closeModal = () => {\n    setSelectedTask(null);\n  };\n\n  const addNewTask = (newTask) => {\n    setTasks((prevTasks) => [...prevTasks, newTask]);\n  };\n\n  return (\n    <div>\n      <TaskTable\n        tasks={tasks}\n        handleGenerate={handleGenerate}\n        handleRowClick={handleRowClick}\n        handleUpdateTask={handleUpdateTask}\n      />\n      {selectedTask && (\n        <TaskModal\n          task={selectedTask}\n          closeModal={closeModal}\n          updateTask={handleUpdateTask}\n        />\n      )}\n      {isCreateModalOpen && (\n        <CreateTaskModal\n          closeModal={() => setIsCreateModalOpen(false)}\n          addNewTask={addNewTask}\n        />\n      )}\n      <button className=\"add-task-button\" onClick={() => setIsCreateModalOpen(true)}>\n        Add New Task\n      </button>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}