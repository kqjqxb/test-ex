{"ast":null,"code":"var _jsxFileName = \"/Users/mmaksim/test-ex/src/components/TaskModal.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Modal from 'react-modal';\n// import axios from 'axios';\n// import '../App.css';\n\n// Modal.setAppElement('#root');\n\n// const TaskModal = ({ task, closeModal, updateTask }) => {\n//   const [images, setImages] = useState([]);\n//   const [dimension, setDimension] = useState(task.dimension || '');\n//   const [flow, setFlow] = useState('');\n//   const [style, setStyle] = useState('');\n//   const [manualPrompts, setManualPrompts] = useState('');\n//   const [genPerRef, setGenPerRef] = useState(0);\n//   const [text, setText] = useState('');\n//   const [gen_type, setGen_type] = useState(task.gen_type || '');\n\n//   const dimensionOptions = ['1x1', '9x16', '16x9'];\n//   const flowOptions = ['other_models_mix', 'mj_model'];\n//   const genTypeOptions = ['random_generation', 'cyclic_generation'];\n//   const stylesOptions = ['An ultra-realistic photography', 'Anime style'];\n\n//   const handleGenerate = async () => {\n//     try {\n//       const response = await axios.post('https://fasteasy-jvqis72guq-lm.a.run.app/tz-front/generate_images', {\n//         images,\n//         dimension,\n//         style,\n//         manual_prompts: manualPrompts,\n//         gen_per_ref: genPerRef,\n//         flow,\n//         text\n//       }, {\n//         auth: {\n//           username: 'renesandro',\n//           password: 'qwerty1234',\n//         },\n//       });\n//       console.log('Generated images:', response.data);\n\n//       const updatedTask = { ...task, dimension, gen_type,  flow, style, manual_prompts: manualPrompts, genPerRef, text };\n//       updateTask(updatedTask);\n\n//       closeModal();\n//     } catch (error) {\n//       console.error('Error generating images:', error);\n//     }\n//   };\n\n//   return (\n//     <Modal\n//       isOpen={true}\n//       onRequestClose={closeModal}\n//       contentLabel=\"Task Modal\"\n//       className=\"modal-content\"\n//       overlayClassName=\"modal-overlay\"\n//     >\n//       <div>\n//         <span className=\"close\" onClick={closeModal}>&times;</span>\n//         <h2>{task.task_name}</h2>\n//         <form>\n//           <div>\n//             <label>Text:</label>\n//             <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n//           </div>\n//           <div>\n//             <label>Dimension:</label>\n//             <select value={dimension} onChange={(e) => setDimension(e.target.value)}>\n//               <option value=\"\">Select Dimension</option>\n//               {dimensionOptions.map(option => (\n//                 <option key={option} value={option}>{option}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <div>\n//             <label>Flow:</label>\n//             <select value={flow} onChange={(e) => setFlow(e.target.value)}>\n//               <option value=\"\">Select Flow</option>\n//               {flowOptions.map(option => (\n//                 <option key={option} value={option}>{option}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <div>\n//             <label>Manual Prompts:</label>\n//             <input type=\"text\" value={manualPrompts} onChange={(e) => setManualPrompts(e.target.value)} />\n//           </div>\n//           <div>\n//             <label>Gen Per Ref:</label>\n//             <input type=\"number\" value={genPerRef} onChange={(e) => setGenPerRef(Number(e.target.value))} />\n//           </div>\n//           <div>\n//             <label>Generation Type:</label>\n//             <select value={gen_type} onChange={(e) => setGen_type(e.target.value)}>\n//               <option value=\"\">Select Generation Type</option>\n//               {genTypeOptions.map(option => (\n//                 <option key={option} value={option}>{option}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <div>\n//             <label>Style:</label>\n//             <select value={style} onChange={(e) => setStyle(e.target.value)}>\n//               <option value=\"\">Select Style</option>\n//               {stylesOptions.map(option => (\n//                 <option key={option} value={option}>{option}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <button type=\"button\" onClick={handleGenerate}>Generate</button>\n//         </form>\n//       </div>\n//     </Modal>\n//   );\n// };\n\n// export default TaskModal;\n\n// const handleGenerate = async () => {\n//   try {\n//     const response = await axios.post('https://fasteasy-jvqis72guq-lm.a.run.app/tz-front/generate_images', {\n//       images: [selectedLayer],\n//       dimension,\n//       style,\n//       manual_prompts: manualPrompts,\n//       gen_per_ref: genPerRef,\n//       flow,\n//       text\n//     }, {\n//       auth: {\n//         username: 'renesandro',\n//         password: 'qwerty1234',\n//       },\n//     });\n//     console.log('Generated images:', response.data);\n\n//     // Оновлюємо завдання з новими даними\n//     const updatedTask = { \n//       ...task, \n//       dimension, \n//       gen_type, \n//       flow, \n//       style, \n//       manual_prompts: manualPrompts, \n//       genPerRef, \n//       text, \n//       images \n//     };\n//     updateTask(updatedTask);\n\n//     // Закриваємо модальне вікно\n//     closeModal();\n//   } catch (error) {\n//     console.error('Error generating images:', error);\n\n//     // Навіть у випадку помилки ви можете закрити модальне вікно, якщо це потрібно\n//     closeModal();\n//   }\n// };\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './TaskModal.css';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskModal = ({\n  isOpen,\n  onClose,\n  task,\n  onSave\n}) => {\n  _s();\n  const [dimension, setDimension] = useState('1x1');\n  const [flow, setFlow] = useState('other_models_mix');\n  const [manualPrompts, setManualPrompts] = useState('');\n  const [genPerRef, setGenPerRef] = useState(1);\n  const [style, setStyle] = useState('An ultra-realistic photography');\n  const [selectedImage, setSelectedImage] = useState('');\n  const [imagePreview, setImagePreview] = useState(null);\n  const [text, setText] = useState('');\n  useEffect(() => {\n    if (task) {\n      setDimension(task.dimension || '1x1');\n      setFlow(task.flow || 'other_models_mix');\n      setManualPrompts(task.manualPrompts || '');\n      setGenPerRef(task.genPerRef || 1);\n      setStyle(task.style || 'An ultra-realistic photography');\n      setSelectedImage('');\n      setImagePreview(null);\n    }\n  }, [task]);\n  const handleGenerate = async () => {\n    try {\n      // Формуємо дані для запиту\n      const requestData = {\n        images: selectedImage ? [selectedImage] : [],\n        dimension,\n        style,\n        manual_prompts: manualPrompts,\n        gen_per_ref: genPerRef,\n        flow,\n        text\n      };\n\n      // Виконуємо POST запит до API\n      const response = await axios.post('https://fasteasy-jvqis72guq-lm.a.run.app/tz-front/generate_images', requestData, {\n        auth: {\n          username: 'renesandro',\n          password: 'qwerty1234'\n        }\n      });\n      console.log('Generated images:', response.data);\n\n      // Оновлюємо завдання із отриманими даними\n      const updatedTask = {\n        ...task,\n        dimension,\n        flow,\n        style,\n        manual_prompts: manualPrompts,\n        genPerRef,\n        images: selectedImage ? [...(task.images || []), selectedImage] : task.images\n      };\n      onSave(updatedTask); // Зберігаємо оновлені дані завдання\n    } catch (error) {\n      console.error('Error generating images:', error);\n\n      // Оновлюємо завдання навіть у випадку помилки, щоб зберегти вибране фото\n      const updatedTask = {\n        ...task,\n        dimension,\n        flow,\n        style,\n        manual_prompts: manualPrompts,\n        genPerRef,\n        images: selectedImage ? [...(task.images || []), selectedImage] : task.images,\n        text\n      };\n      onSave(updatedTask); // Зберігаємо дані, навіть якщо API-запит не вдався\n    } finally {\n      onClose(); // Закриваємо модальне вікно незалежно від результату\n    }\n  };\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file && ['image/png', 'image/jpg', 'image/jpeg'].includes(file.type)) {\n      const fileName = file.name;\n      setSelectedImage(fileName);\n      setImagePreview(URL.createObjectURL(file)); // Generate preview\n\n      // Update the image list and preview\n      if (selectedImage && task.images.includes(selectedImage)) {\n        const updatedImages = task.images.map(img => img === selectedImage ? fileName : img);\n        onSave({\n          ...task,\n          images: updatedImages\n        });\n      }\n    }\n  };\n  const handleImageRemove = () => {\n    if (selectedImage) {\n      const updatedImages = (task.images || []).filter(img => img !== selectedImage);\n      setSelectedImage('');\n      setImagePreview(null);\n      onSave({\n        ...task,\n        images: updatedImages\n      });\n    }\n  };\n  const handleImageSelectionChange = e => {\n    const imageName = e.target.value;\n    setSelectedImage(imageName);\n    if (imageName && task.images.includes(imageName)) {\n      setImagePreview(null); // Clear preview if an existing image is selected\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close\",\n        id: \"close-modal-button\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(AiOutlineClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: task ? task.task_name : 'Add New Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Dimension:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: dimension,\n            onChange: e => setDimension(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1x1\",\n              children: \"1x1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"9x16\",\n              children: \"9x16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"16x9\",\n              children: \"16x9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Flow:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: flow,\n            onChange: e => setFlow(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"other_models_mix\",\n              children: \"Other Models Mix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mj_model\",\n              children: \"MJ Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Select Image Layer:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedImage || '',\n            onChange: handleImageSelectionChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"New image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), (task.images || []).map((image, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: image,\n              children: image\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".png,.jpg,.jpeg\",\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [imagePreview && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imagePreview,\n            alt: \"Selected\",\n            className: \"preview-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleImageRemove,\n            children: \"Remove Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Manual Prompts:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: manualPrompts,\n            onChange: e => setManualPrompts(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Generatios per ref:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: genPerRef,\n            onChange: e => setGenPerRef(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Style:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: style,\n            onChange: e => setStyle(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"An ultra-realistic photography\",\n              children: \"An ultra-realistic photography\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Anime style\",\n              children: \"Anime style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerate,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskModal, \"nC4OZuZ1QJqgmEDx8pemLqILa4o=\");\n_c = TaskModal;\nTaskModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  task: PropTypes.object,\n  onSave: PropTypes.func.isRequired\n};\nexport default TaskModal;\nvar _c;\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","AiOutlineClose","axios","jsxDEV","_jsxDEV","TaskModal","isOpen","onClose","task","onSave","_s","dimension","setDimension","flow","setFlow","manualPrompts","setManualPrompts","genPerRef","setGenPerRef","style","setStyle","selectedImage","setSelectedImage","imagePreview","setImagePreview","text","setText","handleGenerate","requestData","images","manual_prompts","gen_per_ref","response","post","auth","username","password","console","log","data","updatedTask","error","handleImageUpload","e","file","target","files","includes","type","fileName","name","URL","createObjectURL","updatedImages","map","img","handleImageRemove","filter","handleImageSelectionChange","imageName","value","className","children","id","onClick","_jsxFileName","lineNumber","columnNumber","task_name","onChange","image","index","accept","src","alt","Number","_c","propTypes","bool","isRequired","func","object","$RefreshReg$"],"sources":["/Users/mmaksim/test-ex/src/components/TaskModal.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Modal from 'react-modal';\n// import axios from 'axios';\n// import '../App.css';\n\n// Modal.setAppElement('#root');\n\n// const TaskModal = ({ task, closeModal, updateTask }) => {\n//   const [images, setImages] = useState([]);\n//   const [dimension, setDimension] = useState(task.dimension || '');\n//   const [flow, setFlow] = useState('');\n//   const [style, setStyle] = useState('');\n//   const [manualPrompts, setManualPrompts] = useState('');\n//   const [genPerRef, setGenPerRef] = useState(0);\n//   const [text, setText] = useState('');\n//   const [gen_type, setGen_type] = useState(task.gen_type || '');\n\n//   const dimensionOptions = ['1x1', '9x16', '16x9'];\n//   const flowOptions = ['other_models_mix', 'mj_model'];\n//   const genTypeOptions = ['random_generation', 'cyclic_generation'];\n//   const stylesOptions = ['An ultra-realistic photography', 'Anime style'];\n\n//   const handleGenerate = async () => {\n//     try {\n//       const response = await axios.post('https://fasteasy-jvqis72guq-lm.a.run.app/tz-front/generate_images', {\n//         images,\n//         dimension,\n//         style,\n//         manual_prompts: manualPrompts,\n//         gen_per_ref: genPerRef,\n//         flow,\n//         text\n//       }, {\n//         auth: {\n//           username: 'renesandro',\n//           password: 'qwerty1234',\n//         },\n//       });\n//       console.log('Generated images:', response.data);\n\n//       const updatedTask = { ...task, dimension, gen_type,  flow, style, manual_prompts: manualPrompts, genPerRef, text };\n//       updateTask(updatedTask);\n\n//       closeModal();\n//     } catch (error) {\n//       console.error('Error generating images:', error);\n//     }\n//   };\n  \n\n//   return (\n//     <Modal\n//       isOpen={true}\n//       onRequestClose={closeModal}\n//       contentLabel=\"Task Modal\"\n//       className=\"modal-content\"\n//       overlayClassName=\"modal-overlay\"\n//     >\n//       <div>\n//         <span className=\"close\" onClick={closeModal}>&times;</span>\n//         <h2>{task.task_name}</h2>\n//         <form>\n//           <div>\n//             <label>Text:</label>\n//             <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n//           </div>\n//           <div>\n//             <label>Dimension:</label>\n//             <select value={dimension} onChange={(e) => setDimension(e.target.value)}>\n//               <option value=\"\">Select Dimension</option>\n//               {dimensionOptions.map(option => (\n//                 <option key={option} value={option}>{option}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <div>\n//             <label>Flow:</label>\n//             <select value={flow} onChange={(e) => setFlow(e.target.value)}>\n//               <option value=\"\">Select Flow</option>\n//               {flowOptions.map(option => (\n//                 <option key={option} value={option}>{option}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <div>\n//             <label>Manual Prompts:</label>\n//             <input type=\"text\" value={manualPrompts} onChange={(e) => setManualPrompts(e.target.value)} />\n//           </div>\n//           <div>\n//             <label>Gen Per Ref:</label>\n//             <input type=\"number\" value={genPerRef} onChange={(e) => setGenPerRef(Number(e.target.value))} />\n//           </div>\n//           <div>\n//             <label>Generation Type:</label>\n//             <select value={gen_type} onChange={(e) => setGen_type(e.target.value)}>\n//               <option value=\"\">Select Generation Type</option>\n//               {genTypeOptions.map(option => (\n//                 <option key={option} value={option}>{option}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <div>\n//             <label>Style:</label>\n//             <select value={style} onChange={(e) => setStyle(e.target.value)}>\n//               <option value=\"\">Select Style</option>\n//               {stylesOptions.map(option => (\n//                 <option key={option} value={option}>{option}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <button type=\"button\" onClick={handleGenerate}>Generate</button>\n//         </form>\n//       </div>\n//     </Modal>\n//   );\n// };\n\n// export default TaskModal;\n\n\n\n\n\n\n\n\n\n\n\n// const handleGenerate = async () => {\n//   try {\n//     const response = await axios.post('https://fasteasy-jvqis72guq-lm.a.run.app/tz-front/generate_images', {\n//       images: [selectedLayer],\n//       dimension,\n//       style,\n//       manual_prompts: manualPrompts,\n//       gen_per_ref: genPerRef,\n//       flow,\n//       text\n//     }, {\n//       auth: {\n//         username: 'renesandro',\n//         password: 'qwerty1234',\n//       },\n//     });\n//     console.log('Generated images:', response.data);\n\n//     // Оновлюємо завдання з новими даними\n//     const updatedTask = { \n//       ...task, \n//       dimension, \n//       gen_type, \n//       flow, \n//       style, \n//       manual_prompts: manualPrompts, \n//       genPerRef, \n//       text, \n//       images \n//     };\n//     updateTask(updatedTask);\n\n//     // Закриваємо модальне вікно\n//     closeModal();\n//   } catch (error) {\n//     console.error('Error generating images:', error);\n\n//     // Навіть у випадку помилки ви можете закрити модальне вікно, якщо це потрібно\n//     closeModal();\n//   }\n// };\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './TaskModal.css';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport axios from 'axios';\n\nconst TaskModal = ({ isOpen, onClose, task, onSave }) => {\n  const [dimension, setDimension] = useState('1x1');\n  const [flow, setFlow] = useState('other_models_mix');\n  const [manualPrompts, setManualPrompts] = useState('');\n  const [genPerRef, setGenPerRef] = useState(1);\n  const [style, setStyle] = useState('An ultra-realistic photography');\n  const [selectedImage, setSelectedImage] = useState('');\n  const [imagePreview, setImagePreview] = useState(null);\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    if (task) {\n      setDimension(task.dimension || '1x1');\n      setFlow(task.flow || 'other_models_mix');\n      setManualPrompts(task.manualPrompts || '');\n      setGenPerRef(task.genPerRef || 1);\n      setStyle(task.style || 'An ultra-realistic photography');\n      setSelectedImage('');\n      setImagePreview(null);\n    }\n  }, [task]);\n\n\n\nconst handleGenerate = async () => {\n  try {\n    // Формуємо дані для запиту\n    const requestData = {\n      images: selectedImage ? [selectedImage] : [],\n      dimension,\n      style,\n      manual_prompts: manualPrompts,\n      gen_per_ref: genPerRef,\n      flow,\n      text\n    };\n\n    // Виконуємо POST запит до API\n    const response = await axios.post('https://fasteasy-jvqis72guq-lm.a.run.app/tz-front/generate_images', requestData, {\n      auth: {\n        username: 'renesandro',\n        password: 'qwerty1234',\n      },\n    });\n\n    console.log('Generated images:', response.data);\n\n    // Оновлюємо завдання із отриманими даними\n    const updatedTask = {\n      ...task,\n      dimension,\n      flow,\n      style,\n      manual_prompts: manualPrompts,\n      genPerRef,\n      images: selectedImage ? [...(task.images || []), selectedImage] : task.images,\n    };\n\n    onSave(updatedTask); // Зберігаємо оновлені дані завдання\n  } catch (error) {\n    console.error('Error generating images:', error);\n\n    // Оновлюємо завдання навіть у випадку помилки, щоб зберегти вибране фото\n    const updatedTask = {\n      ...task,\n      dimension,\n      flow,\n      style,\n      manual_prompts: manualPrompts,\n      genPerRef,\n      images: selectedImage ? [...(task.images || []), selectedImage] : task.images,\n      text\n    };\n\n    onSave(updatedTask); // Зберігаємо дані, навіть якщо API-запит не вдався\n  } finally {\n    onClose(); // Закриваємо модальне вікно незалежно від результату\n  }\n};\n\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file && ['image/png', 'image/jpg', 'image/jpeg'].includes(file.type)) {\n      const fileName = file.name;\n      setSelectedImage(fileName);\n      setImagePreview(URL.createObjectURL(file)); // Generate preview\n\n      // Update the image list and preview\n      if (selectedImage && task.images.includes(selectedImage)) {\n        const updatedImages = task.images.map(img => img === selectedImage ? fileName : img);\n        onSave({\n          ...task,\n          images: updatedImages\n        });\n      }\n    }\n  };\n\n  const handleImageRemove = () => {\n    if (selectedImage) {\n      const updatedImages = (task.images || []).filter(img => img !== selectedImage);\n      setSelectedImage('');\n      setImagePreview(null);\n      onSave({\n        ...task,\n        images: updatedImages\n      });\n    }\n  };\n\n  const handleImageSelectionChange = (e) => {\n    const imageName = e.target.value;\n    setSelectedImage(imageName);\n    if (imageName && task.images.includes(imageName)) {\n      setImagePreview(null); // Clear preview if an existing image is selected\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <button className=\"modal-close\" id='close-modal-button' onClick={onClose}>\n          <AiOutlineClose />\n        </button>\n        <h2>{task ? task.task_name : 'Add New Task'}</h2>\n        <div>\n            <label>Text:</label>\n            <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n          </div>\n        <div>\n          <label>\n            Dimension:\n            <select value={dimension} onChange={(e) => setDimension(e.target.value)}>\n              <option value=\"1x1\">1x1</option>\n              <option value=\"9x16\">9x16</option>\n              <option value=\"16x9\">16x9</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label>\n            Flow:\n            <select value={flow} onChange={(e) => setFlow(e.target.value)}>\n              <option value=\"other_models_mix\">Other Models Mix</option>\n              <option value=\"mj_model\">MJ Model</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label>\n            Select Image Layer:\n            <select\n              value={selectedImage || ''}\n              onChange={handleImageSelectionChange}\n            >\n              <option value=\"\">New image</option>\n              {(task.images || []).map((image, index) => (\n                <option key={index} value={image}>{image}</option>\n              ))}\n            </select>\n          </label>\n          <input type=\"file\" accept=\".png,.jpg,.jpeg\" onChange={handleImageUpload} />\n          {selectedImage && (\n            <div className=\"image-preview\">\n              {imagePreview && <img src={imagePreview} alt=\"Selected\" className=\"preview-box\" />}\n              <button onClick={handleImageRemove}>Remove Image</button>\n            </div>\n          )}\n        </div>\n        <div>\n          <label>\n            Manual Prompts:<br />\n            <textarea value={manualPrompts} onChange={(e) => setManualPrompts(e.target.value)} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Generatios per ref:\n            <input type=\"number\" value={genPerRef} onChange={(e) => setGenPerRef(Number(e.target.value))} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Style:\n            <select value={style} onChange={(e) => setStyle(e.target.value)}>\n              <option value=\"An ultra-realistic photography\">An ultra-realistic photography</option>\n              <option value=\"Anime style\">Anime style</option>\n            </select>\n          </label>\n        </div>\n        \n        <button onClick={handleGenerate}>Generate</button>\n      </div>\n    </div>\n  );\n};\n\nTaskModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  task: PropTypes.object,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default TaskModal;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AASA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,iBAAiB;AACxB,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,kBAAkB,CAAC;EACpD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}