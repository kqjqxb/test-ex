{"ast":null,"code":"var _jsxFileName = \"/Users/mmaksim/test-ex/src/components/TaskTable.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import TaskModal from './TaskModal';\n// import '../TaskTable.css';\n// import '../tailwind.css';\n// import { CiTextAlignLeft } from \"react-icons/ci\";\n// import { PiCursorLight } from \"react-icons/pi\";\n// import { MdGrid3X3 } from \"react-icons/md\";\n// import { RxLetterCaseUppercase } from \"react-icons/rx\";\n\n// const TaskTable = ({ tasks, handleGenerate, handleUpdateTask }) => {\n//   const [selectedTask, setSelectedTask] = useState(null);\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   const handleRowClick = (task) => {\n//     setSelectedTask(task);\n//     setIsModalOpen(true);\n//   };\n\n//   const handleModalSave = (updatedTask) => {\n//     handleUpdateTask(updatedTask);\n//     setIsModalOpen(false);\n//   };\n\n//   return (\n//     <>\n//       <table className=\"task-table\">\n//         <thead>\n//           <tr>\n//             <th><RxLetterCaseUppercase />Task Name</th>\n//             <th>Dimension</th>\n//             <th>Template ID</th>\n//             <th className=\"justify-between flex-1\"><CiTextAlignLeft className='ml-4' /><span>Images</span></th>\n//             <th className=\"justify-between flex-1\"><CiTextAlignLeft className='ml-4' /><span>Text</span></th>\n//             <th><MdGrid3X3 />Amount</th>\n//             <th>Gen Type</th>\n//             <th className=\"justify-between flex-1\"><PiCursorLight />Gen Tasks</th>\n//             <th>Result Ads</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {tasks.map((task) => (\n//             <tr key={task.task_name}>\n//               <td\n//                 onClick={() => handleRowClick(task)}\n//                 style={{ cursor: 'pointer' }}\n//               >\n//                 {task.task_name}\n//               </td>\n//               <td>{task.dimension || 'Not Set'}</td>\n//               <td>{task.template_id || 'N/A'}</td>\n//               <td>\n//                 {task.images && task.images.length > 0 ? (\n//                   task.images.join(', ')\n//                 ) : (\n//                   'No images'\n//                 )}\n//               </td>\n//               <td>{task.text || 'N/A'}</td>\n//               <td>{task.genPerRef}</td>\n//               <td>{task.gen_type || 'N/A'}</td>\n//               <td>\n//                 <button\n//                   className=\"bg-yellow-100 text-black-400 px-3 py-1 rounded\"\n//                   onClick={() => handleGenerate(task)}\n//                 >\n//                   Generate\n//                 </button>\n//               </td>\n//               <td>\n//                 <a\n//                   href={`https://testapi-jvqis72guq-lm.a.run.app/test_vidro/${task.task_name}_${task.dimension}/format_validation`}\n//                   target=\"_blank\"\n//                   rel=\"noopener noreferrer\"\n//                   className=\"bg-green-200 px-3 py-1 rounded\"\n//                 >\n//                   View Results\n//                 </a>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {selectedTask && (\n//         <TaskModal\n//           isOpen={isModalOpen}\n//           onClose={() => setIsModalOpen(false)}\n//           task={selectedTask}\n//           onSave={handleModalSave}\n//         />\n//       )}\n//     </>\n//   );\n// };\n\n// export default TaskTable;\n\n//--------------------------------------------------------------------------------------------\n\n//першочергове\n\n// import React, { useEffect, useState } from 'react';\n// import '../TaskTable.css';\n// import '../tailwind.css';\n// import { CiTextAlignLeft } from \"react-icons/ci\";\n// import { PiCursorLight } from \"react-icons/pi\";\n// import { MdGrid3X3 } from \"react-icons/md\";\n// import { RxLetterCaseUppercase } from \"react-icons/rx\";\n\n// const dimensionOptions = ['1x1', '9x16', '16x9'];\n// const genTypeOptions = ['random_generation', 'cyclic_generation'];\n\n// const TaskTable = ({ tasks, handleGenerate, handleRowClick, handleUpdateTask }) => {\n//   const [count, setCount] = useState(0);\n//   const [sum, setSum] = useState(0);\n//   const [unique, setUnique] = useState(0);\n//   const [editingTask, setEditingTask] = useState(null);\n//   const [showDimensionOptions, setShowDimensionOptions] = useState(false);\n//   const [showGenTypeOptions, setShowGenTypeOptions] = useState(false);\n\n//   useEffect(() => {\n//     setCount(tasks.length);\n//     setSum(tasks.reduce((total, task) => total + task.genPerRef, 0));\n//     setUnique(tasks.filter(task => task.gen_type === 'cyclic_generation').length);\n//   }, [tasks]);\n\n//   const handleDimensionChange = (dimension, task) => {\n//     const updatedTask = { ...task, dimension };\n//     handleUpdateTask(updatedTask);\n//     setEditingTask(null);\n//     setShowDimensionOptions(false);\n//   };\n\n//   const handleGenTypeChange = (gen_type, task) => {\n//     const updatedTask = { ...task, gen_type };\n//     handleUpdateTask(updatedTask);\n//     setEditingTask(null);\n//     setShowGenTypeOptions(false);\n//   };\n\n//   return (\n//     <table className=\"task-table\">\n//       <thead>\n//         <tr>\n//           <th><RxLetterCaseUppercase />Task Name</th>\n//           <th>Dimension</th>\n//           <th>Template ID</th>\n//           <th className=\"justify-between flex-1  \"><CiTextAlignLeft className='ml-4'/><span >Images</span></th>\n//           <th className=\"justify-between flex-1 \"><CiTextAlignLeft className='ml-4'/><span >Text</span></th>\n//           <th><MdGrid3X3 />Amount</th>\n//           <th>Gen Type</th>\n//           <th className=\"justify-between flex-1\" > <PiCursorLight />Gen Tasks</th>\n//           <th>Result Ads</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         <tr style={{ backgroundColor: '#f7f7f7', textAlign: 'right' }}>\n//           <td style={{textAlign: 'right' }} >\n//             <span>Count</span> <b>{count}</b>\n//           </td>\n//           <td colSpan=\"4\" style={{textAlign: 'right' }}></td>\n//           <td>\n//             <span>Sum</span> <b> {sum}</b></td>\n//           <td ><span >Unique</span> <b> {unique}</b> </td>\n//           <td colSpan=\"2\" style={{textAlign: 'right' }}></td>\n//         </tr>\n//         {Array.isArray(tasks) && tasks.map((task) => (\n//           <tr key={task.task_name}>\n//             <td onClick={() => handleRowClick(task)} style={{ cursor: 'pointer' }}>\n//               {task.task_name}\n//             </td>\n//             <td onClick={(e) => { e.stopPropagation(); setEditingTask(task); setShowDimensionOptions(true); }}>\n//               <span className='bg-purple-200 text-black text-center items-center text-xs rounded-lg px-2 py-1' style={{cursor: 'pointer'}}>\n//                 {task.dimension}\n//               </span>\n//               {editingTask === task && showDimensionOptions && (\n//                 <div className=\"dropdown\">\n//                   {dimensionOptions.map(option => (\n//                     <div\n//                       key={option}\n//                       className=\"dropdown-item\"\n//                       onClick={() => handleDimensionChange(option, task)}\n//                     >\n//                       {option}\n//                     </div>\n//                   ))}\n//                 </div>\n//               )}\n//             </td>\n//             <td><span className=\"bg-pink-300 text-clack px-2 py-1 rounded-xl\" >{task.template_id}</span></td>\n//             <td>\n// {task.image_layers.map((image, index) => (\n//   <div key={index} className=\"bg-gray-200 p-2 rounded mb-1\">\n//     {image}\n//   </div>\n// ))}\n//             </td>\n//             <td>{task.text_layers.join(', ')}</td>\n//             <td>{task.genPerRef}</td>\n//             <td onClick={(e) => { e.stopPropagation(); setEditingTask(task); setShowGenTypeOptions(true); }}>\n//               <span className=\"bg-orange-300 text-black px-2 py-1 rounded-xl\" style={{cursor: 'pointer'}}>\n//                 {task.gen_type}\n//               </span>\n//               {editingTask === task && showGenTypeOptions && (\n//                 <div className=\"dropdown\">\n//                   {genTypeOptions.map(option => (\n//                     <div\n//                       key={option}\n//                       className=\"dropdown-item\"\n//                       onClick={() => handleGenTypeChange(option, task)}\n//                     >\n//                       {option}\n//                     </div>\n//                   ))}\n//                 </div>\n//               )}\n//             </td>\n//             <td>\n//               <button className=\"bg-yellow-100 text-black-400 px-3 py-1 rounded\" onClick={(e) => { e.stopPropagation(); handleGenerate(task); }}>Generate</button>\n//             </td>\n//             <td>\n//               <a\n//                 href={`https://testapi-jvqis72guq-lm.a.run.app/test_vidro/${task.task_name}_${task.dimension}/format_validation`}\n//                 target=\"_blank\"\n//                 rel=\"noopener noreferrer\"\n//                 onClick={(e) => e.stopPropagation()}\n//                 className=\"bg-green-200 px-3 py-1 rounded\"\n//               >\n//                 View Results\n//               </a>\n//             </td>\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// export default TaskTable;\n\n//--------------------------------------------------------------------------------------------\n\nimport React, { useEffect, useState } from 'react';\nimport TaskModal from './TaskModal';\nimport '../TaskTable.css';\nimport '../tailwind.css';\nimport { CiTextAlignLeft } from \"react-icons/ci\";\nimport { PiCursorLight } from \"react-icons/pi\";\nimport { MdGrid3X3 } from \"react-icons/md\";\nimport { RxLetterCaseUppercase } from \"react-icons/rx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dimensionOptions = ['1x1', '9x16', '16x9'];\nconst genTypeOptions = ['random_generation', 'cyclic_generation'];\nconst TaskTable = ({\n  tasks,\n  handleGenerate,\n  handleUpdateTask\n}) => {\n  _s();\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [count, setCount] = useState(0);\n  const [sum, setSum] = useState(0);\n  const [unique, setUnique] = useState(0);\n  const [editingTask, setEditingTask] = useState(null);\n  const [showDimensionOptions, setShowDimensionOptions] = useState(false);\n  const [showGenTypeOptions, setShowGenTypeOptions] = useState(false);\n  useEffect(() => {\n    setCount(tasks.length);\n    setSum(tasks.reduce((total, task) => total + task.genPerRef, 0));\n    setUnique(tasks.filter(task => task.gen_type === 'cyclic_generation').length);\n  }, [tasks]);\n  const handleRowClick = task => {\n    setSelectedTask(task);\n    setIsModalOpen(true);\n  };\n  const handleModalSave = updatedTask => {\n    handleUpdateTask(updatedTask);\n    setIsModalOpen(false);\n  };\n  const handleDimensionChange = (dimension, task) => {\n    const updatedTask = {\n      ...task,\n      dimension\n    };\n    handleUpdateTask(updatedTask);\n    setEditingTask(null);\n    setShowDimensionOptions(false);\n  };\n  const handleGenTypeChange = (gen_type, task) => {\n    const updatedTask = {\n      ...task,\n      gen_type\n    };\n    handleUpdateTask(updatedTask);\n    setEditingTask(null);\n    setShowGenTypeOptions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"task-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"flex items-center space-x-1 whitespace-nowrap\",\n            children: [/*#__PURE__*/_jsxDEV(RxLetterCaseUppercase, {\n              className: \"mr-1 my-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Task Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"whitespace-nowrap\",\n            children: \"Dimension\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"whitespace-nowrap\",\n            children: \"Template ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"flex items-center space-x-1 whitespace-nowrap\",\n            children: [/*#__PURE__*/_jsxDEV(CiTextAlignLeft, {\n              className: \"mr-1 my-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \" items-center space-x-1 whitespace-nowrap mx-5\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"flex\",\n              children: [/*#__PURE__*/_jsxDEV(CiTextAlignLeft, {\n                className: \"mr-2 mt-1 flex-row\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 30\n              }, this), \"Text\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"flex items-center space-x-1 whitespace-nowrap\",\n            children: [/*#__PURE__*/_jsxDEV(MdGrid3X3, {\n              className: \"mr-1 my-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"whitespace-nowrap\",\n            children: \"Gen Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"flex items-center space-x-1 whitespace-nowrap\",\n            children: [/*#__PURE__*/_jsxDEV(PiCursorLight, {\n              className: \"mr-1 my-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Gen Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"whitespace-nowrap text-center\",\n            children: \"Result Ads\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: '#f7f7f7',\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            style: {\n              textAlign: 'right'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Sum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", sum]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Unique\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 16\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", unique]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 37\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            style: {\n              textAlign: 'right'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 9\n        }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => handleRowClick(task),\n            style: {\n              cursor: 'pointer'\n            },\n            children: task.task_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: e => {\n              e.stopPropagation();\n              setEditingTask(task);\n              setShowDimensionOptions(true);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-purple-200 text-black text-center items-center text-xs rounded-lg px-2 py-1\",\n              style: {\n                cursor: 'pointer'\n              },\n              children: task.dimension\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), editingTask === task && showDimensionOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: dimensionOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-item\",\n                onClick: () => handleDimensionChange(option, task),\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-pink-300 text-clack px-2 py-1 rounded-xl\",\n              children: task.template_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.images ? task.images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-200 p-2 rounded mb-1\",\n              children: image\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 7\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.text || ' '\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.genPerRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: e => {\n              e.stopPropagation();\n              setEditingTask(task);\n              setShowGenTypeOptions(true);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-orange-300 text-black px-2 py-1 rounded-xl\",\n              style: {\n                cursor: 'pointer'\n              },\n              children: task.gen_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this), editingTask === task && showGenTypeOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: genTypeOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-item\",\n                onClick: () => handleGenTypeChange(option, task),\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-yellow-100 text-black-400 px-3 py-1 rounded\",\n              onClick: () => handleGenerate(task),\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://testapi-jvqis72guq-lm.a.run.app/test_vidro/${task.task_name}_${task.dimension}/format_validation`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"bg-green-200 px-3 py-1 rounded\",\n              children: \"View Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this)]\n        }, task.task_name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      task: selectedTask,\n      onSave: handleModalSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(TaskTable, \"6e1pUqxAVwbUm4M9ARfF92/Vte4=\");\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","useEffect","useState","TaskModal","CiTextAlignLeft","PiCursorLight","MdGrid3X3","RxLetterCaseUppercase","jsxDEV","_jsxDEV","Fragment","_Fragment","dimensionOptions","genTypeOptions","TaskTable","tasks","handleGenerate","handleUpdateTask","_s","selectedTask","setSelectedTask","isModalOpen","setIsModalOpen","count","setCount","sum","setSum","unique","setUnique","editingTask","setEditingTask","showDimensionOptions","setShowDimensionOptions","showGenTypeOptions","setShowGenTypeOptions","length","reduce","total","task","genPerRef","filter","gen_type","handleRowClick","handleModalSave","updatedTask","handleDimensionChange","dimension","handleGenTypeChange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","textAlign","colSpan","map","onClick","cursor","task_name","e","stopPropagation","option","template_id","images","image","index","text","href","target","rel","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/mmaksim/test-ex/src/components/TaskTable.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import TaskModal from './TaskModal';\n// import '../TaskTable.css';\n// import '../tailwind.css';\n// import { CiTextAlignLeft } from \"react-icons/ci\";\n// import { PiCursorLight } from \"react-icons/pi\";\n// import { MdGrid3X3 } from \"react-icons/md\";\n// import { RxLetterCaseUppercase } from \"react-icons/rx\";\n\n// const TaskTable = ({ tasks, handleGenerate, handleUpdateTask }) => {\n//   const [selectedTask, setSelectedTask] = useState(null);\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   const handleRowClick = (task) => {\n//     setSelectedTask(task);\n//     setIsModalOpen(true);\n//   };\n\n//   const handleModalSave = (updatedTask) => {\n//     handleUpdateTask(updatedTask);\n//     setIsModalOpen(false);\n//   };\n\n//   return (\n//     <>\n//       <table className=\"task-table\">\n//         <thead>\n//           <tr>\n//             <th><RxLetterCaseUppercase />Task Name</th>\n//             <th>Dimension</th>\n//             <th>Template ID</th>\n//             <th className=\"justify-between flex-1\"><CiTextAlignLeft className='ml-4' /><span>Images</span></th>\n//             <th className=\"justify-between flex-1\"><CiTextAlignLeft className='ml-4' /><span>Text</span></th>\n//             <th><MdGrid3X3 />Amount</th>\n//             <th>Gen Type</th>\n//             <th className=\"justify-between flex-1\"><PiCursorLight />Gen Tasks</th>\n//             <th>Result Ads</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {tasks.map((task) => (\n//             <tr key={task.task_name}>\n//               <td\n//                 onClick={() => handleRowClick(task)}\n//                 style={{ cursor: 'pointer' }}\n//               >\n//                 {task.task_name}\n//               </td>\n//               <td>{task.dimension || 'Not Set'}</td>\n//               <td>{task.template_id || 'N/A'}</td>\n//               <td>\n//                 {task.images && task.images.length > 0 ? (\n//                   task.images.join(', ')\n//                 ) : (\n//                   'No images'\n//                 )}\n//               </td>\n//               <td>{task.text || 'N/A'}</td>\n//               <td>{task.genPerRef}</td>\n//               <td>{task.gen_type || 'N/A'}</td>\n//               <td>\n//                 <button\n//                   className=\"bg-yellow-100 text-black-400 px-3 py-1 rounded\"\n//                   onClick={() => handleGenerate(task)}\n//                 >\n//                   Generate\n//                 </button>\n//               </td>\n//               <td>\n//                 <a\n//                   href={`https://testapi-jvqis72guq-lm.a.run.app/test_vidro/${task.task_name}_${task.dimension}/format_validation`}\n//                   target=\"_blank\"\n//                   rel=\"noopener noreferrer\"\n//                   className=\"bg-green-200 px-3 py-1 rounded\"\n//                 >\n//                   View Results\n//                 </a>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {selectedTask && (\n//         <TaskModal\n//           isOpen={isModalOpen}\n//           onClose={() => setIsModalOpen(false)}\n//           task={selectedTask}\n//           onSave={handleModalSave}\n//         />\n//       )}\n//     </>\n//   );\n// };\n\n// export default TaskTable;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------\n\n//першочергове\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import '../TaskTable.css';\n// import '../tailwind.css';\n// import { CiTextAlignLeft } from \"react-icons/ci\";\n// import { PiCursorLight } from \"react-icons/pi\";\n// import { MdGrid3X3 } from \"react-icons/md\";\n// import { RxLetterCaseUppercase } from \"react-icons/rx\";\n\n// const dimensionOptions = ['1x1', '9x16', '16x9'];\n// const genTypeOptions = ['random_generation', 'cyclic_generation'];\n\n// const TaskTable = ({ tasks, handleGenerate, handleRowClick, handleUpdateTask }) => {\n//   const [count, setCount] = useState(0);\n//   const [sum, setSum] = useState(0);\n//   const [unique, setUnique] = useState(0);\n//   const [editingTask, setEditingTask] = useState(null);\n//   const [showDimensionOptions, setShowDimensionOptions] = useState(false);\n//   const [showGenTypeOptions, setShowGenTypeOptions] = useState(false);\n\n//   useEffect(() => {\n//     setCount(tasks.length);\n//     setSum(tasks.reduce((total, task) => total + task.genPerRef, 0));\n//     setUnique(tasks.filter(task => task.gen_type === 'cyclic_generation').length);\n//   }, [tasks]);\n\n//   const handleDimensionChange = (dimension, task) => {\n//     const updatedTask = { ...task, dimension };\n//     handleUpdateTask(updatedTask);\n//     setEditingTask(null);\n//     setShowDimensionOptions(false);\n//   };\n\n//   const handleGenTypeChange = (gen_type, task) => {\n//     const updatedTask = { ...task, gen_type };\n//     handleUpdateTask(updatedTask);\n//     setEditingTask(null);\n//     setShowGenTypeOptions(false);\n//   };\n\n//   return (\n//     <table className=\"task-table\">\n//       <thead>\n//         <tr>\n//           <th><RxLetterCaseUppercase />Task Name</th>\n//           <th>Dimension</th>\n//           <th>Template ID</th>\n//           <th className=\"justify-between flex-1  \"><CiTextAlignLeft className='ml-4'/><span >Images</span></th>\n//           <th className=\"justify-between flex-1 \"><CiTextAlignLeft className='ml-4'/><span >Text</span></th>\n//           <th><MdGrid3X3 />Amount</th>\n//           <th>Gen Type</th>\n//           <th className=\"justify-between flex-1\" > <PiCursorLight />Gen Tasks</th>\n//           <th>Result Ads</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         <tr style={{ backgroundColor: '#f7f7f7', textAlign: 'right' }}>\n//           <td style={{textAlign: 'right' }} >\n//             <span>Count</span> <b>{count}</b>\n//           </td>\n//           <td colSpan=\"4\" style={{textAlign: 'right' }}></td>\n//           <td>\n//             <span>Sum</span> <b> {sum}</b></td>\n//           <td ><span >Unique</span> <b> {unique}</b> </td>\n//           <td colSpan=\"2\" style={{textAlign: 'right' }}></td>\n//         </tr>\n//         {Array.isArray(tasks) && tasks.map((task) => (\n//           <tr key={task.task_name}>\n//             <td onClick={() => handleRowClick(task)} style={{ cursor: 'pointer' }}>\n//               {task.task_name}\n//             </td>\n//             <td onClick={(e) => { e.stopPropagation(); setEditingTask(task); setShowDimensionOptions(true); }}>\n//               <span className='bg-purple-200 text-black text-center items-center text-xs rounded-lg px-2 py-1' style={{cursor: 'pointer'}}>\n//                 {task.dimension}\n//               </span>\n//               {editingTask === task && showDimensionOptions && (\n//                 <div className=\"dropdown\">\n//                   {dimensionOptions.map(option => (\n//                     <div\n//                       key={option}\n//                       className=\"dropdown-item\"\n//                       onClick={() => handleDimensionChange(option, task)}\n//                     >\n//                       {option}\n//                     </div>\n//                   ))}\n//                 </div>\n//               )}\n//             </td>\n//             <td><span className=\"bg-pink-300 text-clack px-2 py-1 rounded-xl\" >{task.template_id}</span></td>\n//             <td>\n              // {task.image_layers.map((image, index) => (\n              //   <div key={index} className=\"bg-gray-200 p-2 rounded mb-1\">\n              //     {image}\n              //   </div>\n              // ))}\n//             </td>\n//             <td>{task.text_layers.join(', ')}</td>\n//             <td>{task.genPerRef}</td>\n//             <td onClick={(e) => { e.stopPropagation(); setEditingTask(task); setShowGenTypeOptions(true); }}>\n//               <span className=\"bg-orange-300 text-black px-2 py-1 rounded-xl\" style={{cursor: 'pointer'}}>\n//                 {task.gen_type}\n//               </span>\n//               {editingTask === task && showGenTypeOptions && (\n//                 <div className=\"dropdown\">\n//                   {genTypeOptions.map(option => (\n//                     <div\n//                       key={option}\n//                       className=\"dropdown-item\"\n//                       onClick={() => handleGenTypeChange(option, task)}\n//                     >\n//                       {option}\n//                     </div>\n//                   ))}\n//                 </div>\n//               )}\n//             </td>\n//             <td>\n//               <button className=\"bg-yellow-100 text-black-400 px-3 py-1 rounded\" onClick={(e) => { e.stopPropagation(); handleGenerate(task); }}>Generate</button>\n//             </td>\n//             <td>\n//               <a\n//                 href={`https://testapi-jvqis72guq-lm.a.run.app/test_vidro/${task.task_name}_${task.dimension}/format_validation`}\n//                 target=\"_blank\"\n//                 rel=\"noopener noreferrer\"\n//                 onClick={(e) => e.stopPropagation()}\n//                 className=\"bg-green-200 px-3 py-1 rounded\"\n//               >\n//                 View Results\n//               </a>\n//             </td>\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// export default TaskTable;\n\n\n//--------------------------------------------------------------------------------------------\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport TaskModal from './TaskModal';\nimport '../TaskTable.css';\nimport '../tailwind.css';\nimport { CiTextAlignLeft } from \"react-icons/ci\";\nimport { PiCursorLight } from \"react-icons/pi\";\nimport { MdGrid3X3 } from \"react-icons/md\";\nimport { RxLetterCaseUppercase } from \"react-icons/rx\";\n\nconst dimensionOptions = ['1x1', '9x16', '16x9'];\nconst genTypeOptions = ['random_generation', 'cyclic_generation'];\n\n\n\nconst TaskTable = ({ tasks, handleGenerate, handleUpdateTask }) => {\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [count, setCount] = useState(0);\nconst [sum, setSum] = useState(0);\nconst [unique, setUnique] = useState(0);\nconst [editingTask, setEditingTask] = useState(null);\nconst [showDimensionOptions, setShowDimensionOptions] = useState(false);\nconst [showGenTypeOptions, setShowGenTypeOptions] = useState(false);\n\n\nuseEffect(() => {\n  setCount(tasks.length);\n  setSum(tasks.reduce((total, task) => total + task.genPerRef, 0));\n  setUnique(tasks.filter(task => task.gen_type === 'cyclic_generation').length);\n}, [tasks]);\n\n  const handleRowClick = (task) => {\n    setSelectedTask(task);\n    setIsModalOpen(true);\n  };\n\n  const handleModalSave = (updatedTask) => {\n    handleUpdateTask(updatedTask); \n    setIsModalOpen(false);\n  };\n  \n\n  const handleDimensionChange = (dimension, task) => {\n    const updatedTask = { ...task, dimension };\n    handleUpdateTask(updatedTask);\n    setEditingTask(null);\n    setShowDimensionOptions(false);\n  };\n\n  const handleGenTypeChange = (gen_type, task) => {\n    const updatedTask = { ...task, gen_type };\n    handleUpdateTask(updatedTask);\n    setEditingTask(null);\n    setShowGenTypeOptions(false);\n  };\n\n  return (\n    <>\n      <table className=\"task-table\">\n        <thead>\n  <tr >\n    <th className=\"flex items-center space-x-1 whitespace-nowrap\">\n      <RxLetterCaseUppercase className=\"mr-1 my-3\" />\n      <span>Task Name</span>\n    </th>\n    <th className=\"whitespace-nowrap\">\n      Dimension\n    </th>\n    <th className=\"whitespace-nowrap\">\n      Template ID\n    </th>\n    <th className=\"flex items-center space-x-1 whitespace-nowrap\">\n      <CiTextAlignLeft className=\"mr-1 my-3\" />\n      <span>Images</span>\n    </th>\n    <th className=\" items-center space-x-1 whitespace-nowrap mx-5\">\n      \n      <span className='flex'><CiTextAlignLeft className=\"mr-2 mt-1 flex-row\" />Text</span>\n    </th>\n    <th className=\"flex items-center space-x-1 whitespace-nowrap\">\n      <MdGrid3X3 className=\"mr-1 my-3\" />\n      <span>Amount</span>\n    </th>\n    <th className=\"whitespace-nowrap\">\n      Gen Type\n    </th>\n    <th className=\"flex items-center space-x-1 whitespace-nowrap\">\n      <PiCursorLight className=\"mr-1 my-3\" />\n      <span>Gen Tasks</span>\n    </th>\n    <th className=\"whitespace-nowrap text-center\">\n      Result Ads\n    </th>\n  </tr>\n</thead>\n\n        <tbody>\n        <tr style={{ backgroundColor: '#f7f7f7', textAlign: 'right' }}>\n          <td style={{textAlign: 'center' }} >\n            <span>Count</span> <b>{count}</b>\n          </td>\n          <td colSpan=\"4\" style={{textAlign: 'right' }}></td>\n          <td>\n            <span>Sum</span> <b> {sum}</b></td>\n          <td ><span >Unique</span> <b> {unique}</b> </td>\n          <td colSpan=\"2\" style={{textAlign: 'right' }}></td>\n        </tr>\n          {tasks.map((task) => (\n            <tr key={task.task_name}>\n              <td\n                onClick={() => handleRowClick(task)}\n                style={{ cursor: 'pointer' }}\n              >\n                {task.task_name}\n              </td>\n              <td onClick={(e) => { e.stopPropagation(); setEditingTask(task); setShowDimensionOptions(true); }}>\n              <span className='bg-purple-200 text-black text-center items-center text-xs rounded-lg px-2 py-1' style={{cursor: 'pointer'}}>\n                {task.dimension}\n              </span>\n              {editingTask === task && showDimensionOptions && (\n                <div className=\"dropdown\">\n                  {dimensionOptions.map(option => (\n                    <div\n                      key={option}\n                      className=\"dropdown-item\"\n                      onClick={() => handleDimensionChange(option, task)}\n                    >\n                      {option}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </td>\n            <td><span className=\"bg-pink-300 text-clack px-2 py-1 rounded-xl\" >{task.template_id}</span></td>\n            <td>\n  {task.images ? (\n    task.images.map((image, index) => (\n      <div key={index} className=\"bg-gray-200 p-2 rounded mb-1\">\n        {image}\n      </div>\n    ))\n  ) : (\n    <div > </div> \n  )}\n</td>\n\n              <td>{task.text || ' '}</td>\n              <td>{task.genPerRef}</td>\n              <td onClick={(e) => { e.stopPropagation(); setEditingTask(task); setShowGenTypeOptions(true); }}>\n              <span className=\"bg-orange-300 text-black px-2 py-1 rounded-xl\" style={{cursor: 'pointer'}}>\n                {task.gen_type}\n              </span>\n              {editingTask === task && showGenTypeOptions && (\n                <div className=\"dropdown\">\n                  {genTypeOptions.map(option => (\n                    <div\n                      key={option}\n                      className=\"dropdown-item\"\n                      onClick={() => handleGenTypeChange(option, task)}\n                    >\n                      {option}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </td>\n              <td>\n                <button\n                  className=\"bg-yellow-100 text-black-400 px-3 py-1 rounded\"\n                  onClick={() => handleGenerate(task)}\n                >\n                  Generate\n                </button>\n              </td>\n              <td>\n                <a\n                  href={`https://testapi-jvqis72guq-lm.a.run.app/test_vidro/${task.task_name}_${task.dimension}/format_validation`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"bg-green-200 px-3 py-1 rounded\"\n                >\n                  View Results\n                </a>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {selectedTask && (\n        <TaskModal\n          isOpen={isModalOpen}\n          onClose={() => setIsModalOpen(false)}\n          task={selectedTask}\n          onSave={handleModalSave}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TaskTable;\n\n\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAeA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACc;AACA;AACA;AACA;AACA;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAYA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}